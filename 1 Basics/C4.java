/*******************************************************************************
*                                                                              *
*                                   Циклы. №4.                                 *
*  Составить программу нахождения произведения квадратов первых двухсот чисел. *
*                                                                              *
*******************************************************************************/


public class C4 {

  static byte[] normalize(int[] n) {
/*******************************************************************************
*    Вход: натуральное число в виде массива десятичных разрядов. В каждом      *
*  разряде 0..32767. Количество старших незначащих разрядов достаточно, чтобы  *
*  вместить нормализованный результат.                                         *
*    Выход: в каждом разряде 0..9. Старшие незначащие разряды отброшены.       *
*******************************************************************************/
    int i;
    for(i=0; i<n.length; i++) {
      if (n[i]>9) {
        n[i+1]+=n[i] / 10;
        n[i]=(n[i] % 10);
      }
    }
    i=n.length-1;
    while((i>=0) && (n[i]==0)) i--;
    byte[] Result = new byte[i+1];
    while(i>=0) Result[i]=(byte)n[i--];
    return Result;
  }


  static byte[] mmul(byte[] a, byte[] b) {
/*******************************************************************************
*    Вход: два натуральных числа в виде массивов десятичных разрядов.          *
*    Выход: их произведение в виде массива десятичных разрядов.                *
*******************************************************************************/
    int[] Result = new int[a.length + b.length];
    for (int i=0; i<a.length; i++) {
      for (int j=0; j<b.length; j++) {
        Result[i+j]+=a[i]*b[j];
      }
    }
    return normalize(Result);
  }


  static byte[] int2array(int n) {
/*******************************************************************************
*    Вход: трёхзначное натуральное число.                                      *
*    Выход: это же число в форме массива десятичных разрядов.                  *
*******************************************************************************/
    int[] Result = {0, 0, 0};
    Result[0]=n;
    return normalize(Result);
  }


  static String array2string(byte[] a) {
/*******************************************************************************
*    Вход: натуральное число в виде массива десятичных разрядов. Старший       *
*  разряд значащий.                                                            *
*    Выход: строковое представление этого числа.                               *
*******************************************************************************/
    String Result = "";
    int i = a.length;
    while(i>0) Result+=a[--i];
    return Result;
  }


  public static void main(String[] args) {
    byte[] P = {2};
    int i=200;
    while(i>2) P = mmul(P, int2array(i--));
    P = mmul(P, P);
    System.out.println(array2string(P));
  }
}